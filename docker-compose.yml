version: "3.9"

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ global Kong settings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
x-kong-config: &kong-env
  KONG_DATABASE: ${KONG_DATABASE:-postgres}
  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
  KONG_PG_HOST: kong-database
  KONG_PG_USER: ${KONG_PG_USER:-kong}
  KONG_PG_PASSWORD: mykongpassword

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ volumes â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts: {type: tmpfs, device: tmpfs}
  kong_tmp_vol:
    driver_opts: {type: tmpfs, device: tmpfs}

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ network â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
networks:
  kong-net:
    ipam:
      config:
        - subnet: 172.1.1.0/24

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ services â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
services:
  # ---- bootstrap migrations (run once)
  kong-migrations:
    image: kong:3.6
    command: kong migrations bootstrap
    environment: *kong-env
    depends_on:
      kong-database: {condition: service_healthy}
    networks: [kong-net]
    restart: "no"

  # ---- kong gateway
  kong:
    image: kong:3.6
    user: "${KONG_USER:-kong}"
    environment:
      <<: *kong-env
      # logging / listeners
      KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_ADMIN_GUI_LISTEN: "0.0.0.0:8002"
      KONG_ADMIN_API_URI: "http://34.70.111.171:8001"   # ðŸ‘ˆ NEW
      KONG_ADMIN_GUI_URL: "http://34.70.111.171:8002"   # ðŸ‘ˆ NEW
      # misc
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG:  /dev/stderr
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG:  /dev/stderr
      KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
      KONG_TRACING_INSTRUMENTATIONS: "request"
    depends_on:
      kong-database: {condition: service_healthy}
    networks: [kong-net]
    ports:
      # proxy
      - "0.0.0.0:8000:8000"
      - "0.0.0.0:8443:8443"
      # admin API / manager
      - "0.0.0.0:8001:8001"
      - "0.0.0.0:8444:8444"
      - "0.0.0.0:8002:8002"
    healthcheck:
      test: ["CMD","kong","health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
    security_opt: [no-new-privileges]

  # ---- konga UI (optional)
  konga_web:
    image: pantsel/konga
    container_name: konga_web
    environment:
      NODE_ENV: development
      TOKEN_SECRET: secret
    depends_on: [kong]
    networks: [kong-net]
    ports: ["1337:1337"]

  # ---- postgres
  kong-database:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB:       ${KONG_PG_DATABASE:-kong}
      POSTGRES_USER:     ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-mykongpassword}
    networks: [kong-net]
    volumes:
      - kong_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD","pg_isready","-d","${KONG_PG_DATABASE:-kong}","-U","${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # ---- zipkin
  zipkin:
    image: openzipkin/zipkin:latest
    networks: [kong-net]
    ports: ["9411:9411"]

  # ---- elasticsearch
  elasticsearch:
    image: elasticsearch:8.11.3
    environment:
      ES_JAVA_OPTS: -Xms256m -Xmx1024m
      discovery.type: single-node
      xpack.security.enabled: "false"
    networks:
      kong-net: {ipv4_address: 172.1.1.21}
    ports: ["9200:9200","9300:9300"]
    restart: unless-stopped

  # ---- kibana
  kibana:
    image: kibana:8.11.3
    environment: {ELASTICSEARCH_HOSTS: http://elasticsearch:9200}
    networks:
      kong-net: {ipv4_address: 172.1.1.22}
    ports: ["5601:5601"]
    restart: unless-stopped

  # ---- logstash (waits for ES)
  logstash:
    image: logstash:8.11.3
    environment: {MONITORING_ENABLED: "false"}
    entrypoint: >
      /bin/bash -c "until curl -s http://elasticsearch:9200 >/dev/null; do sleep 2; done;
                    exec /usr/local/bin/docker-entrypoint"
    volumes: ["./logstash/:/usr/share/logstash/pipeline/"]
    networks:
      kong-net: {ipv4_address: 172.1.1.23}
    ports: ["5555:5555/udp","5044:5044","9600:9600"]
    restart: unless-stopped

  # ---- prometheus
  prometheus:
    image: prom/prometheus:latest
    volumes: ["./config/prometheus.yml:/etc/prometheus/prometheus.yml"]
    networks: [kong-net]
    ports: ["9090:9090"]

  # ---- grafana
  grafana:
    image: grafana/grafana:latest
    networks: [kong-net]
    ports: ["3000:3000"]
